{"version":3,"file":"static/js/156.dc09aa44.chunk.js","mappings":"ySAEaA,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iHAQvBC,EAAUH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+BAKnBG,EAAQL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,Y,SCY/B,EAtBmB,SAAHK,GAAoB,IAAdC,EAAMD,EAANC,OACpB,OACEC,EAAAA,EAAAA,KAACV,EAAW,CAAAW,SACTF,GACCA,EAAOG,KAAI,SAAAC,GAAA,IAAGC,EAASD,EAATC,UAAWC,EAAEF,EAAFE,GAAE,OACzBL,EAAAA,EAAAA,KAACN,EAAO,CAAAO,UACND,EAAAA,EAAAA,KAACJ,EAAK,CACJU,IACEF,EAAS,mCAAAG,OAC8BH,GAXrD,8EAcYI,MAAO,IACPC,IAAI,YARMJ,EAWJ,KAIpB,ECmBA,EArCe,WACb,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCb,EAAMe,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAmB1B,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAxB,GAAAyB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAERlB,EAAQ,CAADiB,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBACK,OAAjBV,GAAW,GAAMO,EAAAE,KAAA,GACEE,EAAAA,EAAAA,IAAUrB,GAAS,KAAD,EAA/BgB,EAAIC,EAAAK,KACVhB,EAAUU,EAAKO,WAAWN,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAE1BQ,EAAAA,GAAAA,MAAYR,EAAAO,GAAME,SAAS,QAET,OAFST,EAAAC,KAAA,GAE3BR,GAAW,GAAOO,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,yBAErB,kBAXa,OAAA3B,EAAAyC,MAAA,KAAAC,UAAA,KAadlB,GACF,GAAG,CAACZ,KAGF+B,EAAAA,EAAAA,MAAA,OAAAxC,SAAA,CACGkB,IACCnB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,IAER3C,EAAO4C,OAAS,GACf3C,EAAAA,EAAAA,KAAC4C,EAAU,CAAC7C,OAAQA,KAEpBC,EAAAA,EAAAA,KAAA,MAAAC,SAAI,6CAEND,EAAAA,EAAAA,KAAC6C,EAAAA,GAAc,CAACC,SAAS,gBAG/B,C","sources":["components/ImagesList/ImagesList.styles.js","components/ImagesList/ImagesList.jsx","components/Images/Images.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ImageListEl = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 15px 20px;\n`;\n\nexport const ImageEl = styled.li`\n  max-width: 150px;\n`;\n\n\nexport const Image = styled.img`\n\n`;\n\n","import React from 'react';\nimport { ImageListEl, ImageEl, Image } from './ImagesList.styles';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst ImagesList = ({ images }) => {\n  return (\n    <ImageListEl>\n      {images &&\n        images.map(({ file_path, id }) => (\n          <ImageEl key={id}>\n            <Image\n              src={\n                file_path\n                  ? `https://image.tmdb.org/t/p/w500/${file_path}`\n                  : defaultImg\n              }\n              width={150}\n              alt=\"poster\"\n            />\n\n          </ImageEl>\n        ))}\n    </ImageListEl>\n  );\n};\n\nexport default ImagesList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getImages } from 'services/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport ImagesList from 'components/ImagesList/ImagesList';\n\nconst Images = () => {\n  const { movieId } = useParams();\n  const [images, setImages] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getmovie = async () => {\n      try {\n        if (!movieId) return;\n        setLoading(true);\n        const data = await getImages(movieId);\n        setImages(data.backdrops);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getmovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && (\n        <Loader />\n      )}\n      {images.length > 0 ? (\n        <ImagesList images={images} />\n      ) : (\n        <h3>We don`t have any images for this movie</h3>\n      )}\n      <ToastContainer position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default Images;\n"],"names":["ImageListEl","styled","_templateObject","_taggedTemplateLiteral","ImageEl","_templateObject2","Image","_templateObject3","_ref","images","_jsx","children","map","_ref2","file_path","id","src","concat","width","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setImages","_useState3","_useState4","loading","setLoading","useEffect","getmovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","getImages","sent","backdrops","t0","toast","message","finish","stop","apply","arguments","_jsxs","Loader","length","ImagesList","ToastContainer","position"],"sourceRoot":""}