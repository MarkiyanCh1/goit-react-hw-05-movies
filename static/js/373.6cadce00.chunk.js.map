{"version":3,"file":"static/js/373.6cadce00.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/MovieCard/MovieCard.styles.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styles.js","pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import React from 'react';\nimport ReactModal from 'react-modal';\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    maxWidth: 'calc(100vw - 48px)',\n    maxHeight: 'calc(100vh - 24px)',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '30px',\n    border: 'none',\n    borderRadius: '20px',\n  },\n  overlay: {\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: ' rgba(0, 0, 0, 0.8)',\n    backdropFilter: 'blur(10px)',\n    zIndex: '1200',\n  },\n  body: {\n    overflow: 'hidden',\n  },\n};\n\nReactModal.setAppElement('#root');\n\nconst ModalWindow = ({ videos, modalIsOpen, closeModal }) => {\n  console.log(\"modalvideoa - \", videos);\n  return (\n    <ReactModal\n      isOpen={modalIsOpen}\n      style={modalStyles}\n      onRequestClose={closeModal}\n      onAfterOpen={() => (document.body.style.overflow = 'hidden')}\n      onAfterClose={() => (document.body.style.overflow = 'unset')}\n    >\n\n      {videos.length > 0 && (\n        <iframe\n          autoPlay\n          title=\"Trailer\"\n          width=\"1000\"\n          height=\"500\"\n          src={`https://www.youtube.com/embed/${videos[0].key}`}\n          allow=\"autoplay\"\n        />\n      )}\n\n    </ReactModal>\n  );\n};\n\nexport default ModalWindow;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BoxAbout = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  padding: 0 20px 41px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 5px -5px;\n`;\n\nexport const AboutImg = styled.div`\n  display: block;\n  width: 500px;\n  padding: 20px 0;\n  padding-top: 0;\n  object-fit: contain;\n`;\n\nexport const Img = styled.img`\n  box-shadow: 0.5em 1em 1em rgb(64, 64, 70);\n  border-radius: 20px;\n`;\n\nexport const AboutText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const Title = styled.h3`\n  font-weight: 400;\n  font-size: 45px;\n  line-height: 1.167;\n  text-align: center;\n`;\n\nexport const Tagline = styled.h5`\n  font-weight: 400;\n  font-size: 25px;\n  line-height: 1.334;\n  text-align: center;\n`;\n\nexport const Stats = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const RatingEl = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Data = styled.p`\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 18px;\n`;\n\nexport const CastName = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const CastChar = styled.p`\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const Cast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\nexport const CastMember = styled.li`\n  max-width: 120px;\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\n\n\nexport const LinkEl = styled(Link)`\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 500;\n  color: #f3feff;\n  background-color: #a37cb5;\n  border-radius: 5px;\n  padding: 9px 22px;\n`;\n\nexport const ButtonEl = styled.button`\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 500;\n  color: #f3feff;\n  background-color: #a37cb5;\n  border-radius: 5px;\n  padding: 9px 22px;\n`;\n","import React, { useState } from 'react';\nimport ModalWindow from 'components/Modal/Modal';\nimport { Rating } from '@smastrom/react-rating';\nimport '@smastrom/react-rating/style.css';\nimport {\n  BoxAbout,\n  AboutImg,\n  Img,\n  AboutText,\n  Title,\n  Tagline,\n  Stats,\n  RatingEl,\n  Data,\n  Genres,\n  Cast,\n  CastName,\n  CastChar,\n  CastMember,\n  OverviewText,\n  LinkEl,\n  ButtonEl,\n  ButtonGroup\n} from './MovieCard.styles';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieCard = ({ movie }) => {\n  const {\n    title,\n    original_title,\n    release_date,\n    tagline,\n    poster_path,\n    overview,\n    genres,\n    runtime,\n    vote_average,\n    credits,\n    homepage,\n    imdb_id,\n    videos\n  } = movie;\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setModalIsOpen(prevState => !prevState);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n\n  console.log('videos - ', movie.videos);\n\n  return (\n    <BoxAbout>\n      <AboutImg>\n        <Img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : defaultImg\n          }\n          width={500}\n          alt=\"poster\"\n        />\n      </AboutImg>\n      <AboutText>\n        {title ? (\n          <Title>\n            {title || original_title} ({String(release_date).substring(0, 4)})\n          </Title>\n        ) : (\n          'Unfortunately this movie was not found! Please return to Home page!'\n        )}\n        {tagline ? <Tagline>{tagline}</Tagline> : ' '}\n        {vote_average && runtime ? (\n          <Stats>\n            <RatingEl>\n              <Rating\n                style={{ maxWidth: 180 }}\n                value={vote_average / 2}\n                readOnly\n              />\n              <Data>{(vote_average / 2).toFixed(1)} / 5</Data>\n            </RatingEl>\n            <Data>{runtime}min</Data>\n          </Stats>\n        ) : (\n          ' '\n        )}\n        {genres && genres.length > 0 ? (\n          <>\n            <Genres>\n              {genres.map(item => (\n                <li key={item.id}>\n                  <Data>{item.name}</Data>\n                </li>\n              ))}\n            </Genres>\n          </>\n        ) : (\n          'Not found genres'\n        )}\n        <Title>Overview</Title>\n        {overview && overview.length > 0 ? (\n          <>\n            <OverviewText>{overview}</OverviewText>\n          </>\n        ) : (\n          'Unfortunately, no description was found for this film.'\n        )}\n        <Title>Top Cast</Title>\n        {credits && credits.cast.length > 0 ? (\n          <>\n            <Cast>\n              {credits.cast\n                .map(member => (\n                  <CastMember key={member.id}>\n                    <img\n                      src={\n                        member.profile_path\n                          ? `https://image.tmdb.org/t/p/w500/${member.profile_path}`\n                          : defaultImg\n                      }\n                      width={120}\n                      alt=\"poster\"\n                    />\n                    <CastName>{member.name}</CastName>\n                    <CastChar>{member.character}</CastChar>\n                  </CastMember>\n                ))\n                .slice(0, 6)}\n            </Cast>\n          </>\n        ) : (\n          'Not found actors'\n        )}\n        <ButtonGroup>\n          <LinkEl target=\"_blank\" rel=\"noopener noreferrer\" to={homepage}>\n            Website\n          </LinkEl>\n          <LinkEl\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            to={`https://www.imdb.com/title/${imdb_id}`}\n          >\n            Imdb\n          </LinkEl>\n\n          <ButtonEl onClick={toggleModal} href=\"#\">\n            Trailer\n          </ButtonEl>\n\n          {videos &&\n            <ModalWindow\n            videos={videos.results}\n            modalIsOpen={modalIsOpen}\n            closeModal={closeModal}\n          />\n          }\n\n        </ButtonGroup>\n      </AboutText>\n    </BoxAbout>\n  );\n};\n\nexport default MovieCard;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BtnBack = styled(Link)`\n  display: inline;\n  width: 100px;\n  gap: 4px;\n  padding: 8px;\n  margin: 8px;\n  margin-left: 20px;\n\n  text-decoration: none;\n  border-radius: 4px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n  background-color: #1a102b;\n  color: #e6e6ee;\n  &:active,\n  &:focus,\n  &:hover {\n    color: #e74f88;\n  }\n`;\n\n\nexport const NavToggle = styled.div`\n\n`;\n\nexport const Box = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: wrap;\n  width: 100%;\n  flex-direction: column;\n`;\n\nexport const AddInfo = styled.div`\n  margin-bottom: 50px;\n`;\n\nexport const Nav = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  margin: 20px 0;\n  cursor: pointer;\n  `;\n\n\nexport const Title = styled.p`\nfont-size: 45px;\ntext-align: center;\nmargin-top: 20px;\n`;\n\nexport const LinkLayout = styled(NavLink)`\n  font-size: 30px;\n  font-weight: 600;\n  color: black;\n`;\n\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Loader, Error } from 'components/Loader/Loader';\nimport {\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { getMovieById } from 'services/Api';\nimport {\n  Box,\n  BtnBack,\n  AddInfo,\n  Nav,\n  Title,\n  LinkLayout,\n  NavToggle,\n} from './MovieDetails.styles';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\nconst Images = lazy(() => import('components/Images/Images'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [navIsOpen, setNavIsOpen] = useState(false);\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getmovie = async () => {\n      try {\n        if (!movieId) return;\n        setLoading(true);\n        setError(false);\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(true);\n        return;\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getmovie();\n  }, [movieId]);\n\n  const toggleNav = () => {\n    setNavIsOpen(!navIsOpen);\n  };\n\n  return (\n    <Box>\n      <BtnBack to={backLink.current}>&#8920; Go Back</BtnBack>\n\n      {loading && <Loader />}\n\n      {!error ? (\n        <>\n          <MovieCard movie={movie} />\n\n\n          <AddInfo>\n            <Title>Additional information</Title>\n            <Nav>\n              <NavToggle onClick={toggleNav}>\n                <LinkLayout to=\"cast\">Cast</LinkLayout>\n              </NavToggle>\n              <NavToggle onClick={toggleNav}>\n                <LinkLayout to=\"images\">Images</LinkLayout>\n              </NavToggle>\n              <NavToggle onClick={toggleNav}>\n                <LinkLayout to=\"reviews\">Reviews</LinkLayout>\n              </NavToggle>\n            </Nav>\n          <p style={{ textAlign: \"center\", fontSize: \"18px\" }}>Links works as toggles temporarily. Click on link to open, click again to close </p>\n          </AddInfo>\n\n\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            theme=\"colored\"\n          />\n\n          {navIsOpen && (\n            <Suspense fallback={<Loader />}>\n              <Routes>\n                <Route path=\"cast\" element={<Cast />} />\n                <Route path=\"images\" element={<Images />} />\n                <Route path=\"reviews\" element={<Reviews />} />\n              </Routes>\n            </Suspense>\n          )}\n        </>\n      ) : (\n        <Error />\n      )}\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'c47179d61d62c6159afa6ff918191442';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\nexport const getMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`);\n  return data;\n};\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}?append_to_response=videos,credits`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getImages = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/images`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`);\n  return data;\n};\nexport const getMoviesbyQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}`);\n  return data;\n};\n"],"names":["modalStyles","content","top","left","right","bottom","maxWidth","maxHeight","marginRight","transform","padding","border","borderRadius","overlay","position","width","height","display","justifyContent","alignItems","background","backdropFilter","zIndex","body","overflow","ReactModal","_ref","videos","modalIsOpen","closeModal","console","log","_jsx","isOpen","style","onRequestClose","onAfterOpen","document","onAfterClose","children","length","autoPlay","title","src","concat","key","allow","BoxAbout","styled","_templateObject","_taggedTemplateLiteral","AboutImg","_templateObject2","Img","_templateObject3","AboutText","_templateObject4","Title","_templateObject5","Tagline","_templateObject6","Stats","_templateObject7","RatingEl","_templateObject8","Data","_templateObject9","OverviewText","_templateObject10","CastName","_templateObject11","CastChar","_templateObject12","Genres","_templateObject13","Cast","_templateObject14","CastMember","_templateObject15","ButtonGroup","_templateObject16","LinkEl","Link","_templateObject17","ButtonEl","_templateObject18","defaultImg","movie","original_title","release_date","tagline","poster_path","overview","genres","runtime","vote_average","credits","homepage","imdb_id","_useState","useState","_useState2","_slicedToArray","setModalIsOpen","_jsxs","alt","String","substring","Rating","value","readOnly","toFixed","_Fragment","map","item","name","id","cast","member","profile_path","character","slice","target","rel","to","onClick","prevState","href","ModalWindow","results","BtnBack","NavToggle","Box","AddInfo","Nav","LinkLayout","NavLink","lazy","Reviews","Images","_location$state$from","_location$state","movieId","useParams","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","navIsOpen","setNavIsOpen","location","useLocation","backLink","useRef","state","from","useEffect","getmovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","getMovieById","sent","t0","finish","stop","apply","arguments","toggleNav","current","Loader","Error","MovieCard","textAlign","fontSize","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Suspense","fallback","Routes","Route","path","element","BASE_URL","axios","api_key","getMovies","_yield$axios$get","_ref2","_callee2","_yield$axios$get2","_context2","_x","getCasts","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getImages","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","getMoviesbyQuery","_ref6","_callee6","query","_yield$axios$get6","_context6","_x5"],"sourceRoot":""}